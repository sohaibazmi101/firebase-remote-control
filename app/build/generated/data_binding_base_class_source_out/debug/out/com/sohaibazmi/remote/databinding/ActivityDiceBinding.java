// Generated by view binder compiler. Do not edit!
package com.sohaibazmi.remote.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sohaibazmi.remote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDiceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout diceContainer;

  @NonNull
  public final ImageView diceImage1;

  @NonNull
  public final ImageView diceImage2;

  @NonNull
  public final TextView earningsText;

  @NonNull
  public final EditText guessInput;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final Button rollButton;

  private ActivityDiceBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout diceContainer,
      @NonNull ImageView diceImage1, @NonNull ImageView diceImage2, @NonNull TextView earningsText,
      @NonNull EditText guessInput, @NonNull TextView resultText, @NonNull Button rollButton) {
    this.rootView = rootView;
    this.diceContainer = diceContainer;
    this.diceImage1 = diceImage1;
    this.diceImage2 = diceImage2;
    this.earningsText = earningsText;
    this.guessInput = guessInput;
    this.resultText = resultText;
    this.rollButton = rollButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.diceContainer;
      LinearLayout diceContainer = ViewBindings.findChildViewById(rootView, id);
      if (diceContainer == null) {
        break missingId;
      }

      id = R.id.diceImage1;
      ImageView diceImage1 = ViewBindings.findChildViewById(rootView, id);
      if (diceImage1 == null) {
        break missingId;
      }

      id = R.id.diceImage2;
      ImageView diceImage2 = ViewBindings.findChildViewById(rootView, id);
      if (diceImage2 == null) {
        break missingId;
      }

      id = R.id.earningsText;
      TextView earningsText = ViewBindings.findChildViewById(rootView, id);
      if (earningsText == null) {
        break missingId;
      }

      id = R.id.guessInput;
      EditText guessInput = ViewBindings.findChildViewById(rootView, id);
      if (guessInput == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.rollButton;
      Button rollButton = ViewBindings.findChildViewById(rootView, id);
      if (rollButton == null) {
        break missingId;
      }

      return new ActivityDiceBinding((RelativeLayout) rootView, diceContainer, diceImage1,
          diceImage2, earningsText, guessInput, resultText, rollButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
